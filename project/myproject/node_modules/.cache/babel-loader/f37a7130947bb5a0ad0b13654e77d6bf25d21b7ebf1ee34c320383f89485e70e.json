{"ast":null,"code":"//该文件用于创建整个应用的路由器\nimport VueRouter from \"vue-router\";\nimport Vue from \"vue\";\nVue.use(VueRouter);\nimport about from '../pages/about';\nimport home from '../pages/home';\nimport news from '../pages/news';\nimport message from '../pages/message';\nimport item from '../pages/item';\nconst vr = new VueRouter({\n  routes: [{\n    path: '/about',\n    component: about,\n    meta: {\n      title: '关于'\n    },\n    //独享路由守卫\n    beforeEnter(to, from, next) {\n      if (to.path === '/about') {\n        if (localStorage.getItem('name') === 'czz') {\n          next();\n        } else {\n          alert('用户名不正确');\n        }\n      }\n    }\n  }, {\n    path: '/home',\n    component: home,\n    children: [{\n      path: 'news',\n      component: news,\n      meta: {\n        auth: true,\n        title: '个人新闻'\n      }\n    }, {\n      path: 'message',\n      component: message,\n      meta: {\n        auth: true,\n        title: '个人消息'\n      },\n      children: [{\n        name: 'Item',\n        // path:'item/:id/:title',\n        path: 'item',\n        component: item,\n        /*props的第一种写法,值为对象,该对象中的所有的key，value都会以props形式\r\n        传给Item组件*/\n        // props:{\n        //     a:1,\n        //     b:'hello'\n        // }\n        /*props第二种写法，值为布尔值，如果布尔值为真，则会把该路由组件收到的params参数，以props形式\r\n        传给Item组件 */\n        // props:true\n\n        /* props的第三种写法，值为函数 */\n        props($route) {\n          return {\n            id: $route.query.id,\n            title: $route.query.title\n          };\n        },\n        meta: {\n          auth: true,\n          title: '详细信息'\n        }\n      }]\n    }],\n    meta: {\n      auth: true,\n      title: '个人主目录'\n    }\n  }]\n});\n//全局前置路由守卫\nvr.beforeEach((to, from, next) => {\n  console.log(to, from);\n  if (to.meta.auth) {\n    if (localStorage.getItem('name') === 'czz') {\n      next();\n    } else {\n      alert('用户名不正确');\n    }\n  } else {\n    next();\n  }\n});\n//全局后置路由守卫\nvr.afterEach((to, from) => {\n  document.title = to.meta.title || 'Vue Router Demo';\n});\nexport default vr;","map":{"version":3,"names":["VueRouter","Vue","use","about","home","news","message","item","vr","routes","path","component","meta","title","beforeEnter","to","from","next","localStorage","getItem","alert","children","auth","name","props","$route","id","query","beforeEach","console","log","afterEach","document"],"sources":["C:/Users/30862/Desktop/vue/project/myproject/src/router/index.js"],"sourcesContent":["//该文件用于创建整个应用的路由器\r\nimport VueRouter from \"vue-router\";\r\nimport Vue from \"vue\";\r\nVue.use(VueRouter)\r\nimport about from '../pages/about'\r\nimport home from '../pages/home'\r\nimport news from '../pages/news'\r\nimport message from '../pages/message'\r\nimport item from '../pages/item'\r\n\r\nconst vr= new VueRouter({\r\n    routes:[\r\n        {\r\n            path:'/about',\r\n            component:about,\r\n            meta:{\r\n                title:'关于'\r\n            },\r\n            //独享路由守卫\r\n            beforeEnter(to,from,next){  \r\n                if(to.path==='/about'){\r\n                    if(localStorage.getItem('name')==='czz'){\r\n                        next()\r\n                    }else{\r\n                        alert('用户名不正确')\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        {\r\n            path:'/home',\r\n            component:home,\r\n            children:[\r\n                {\r\n                    path:'news',\r\n                    component:news,\r\n                    meta:{\r\n                        auth:true,\r\n                        title:'个人新闻'\r\n                    }   \r\n                },\r\n                {\r\n                    path:'message',\r\n                    component:message,\r\n                    meta:{\r\n                        auth:true,\r\n                        title:'个人消息'\r\n                    },\r\n                    children:[\r\n                        {\r\n                            name:'Item',\r\n                            // path:'item/:id/:title',\r\n                            path:'item',\r\n                            component:item,\r\n                            /*props的第一种写法,值为对象,该对象中的所有的key，value都会以props形式\r\n                            传给Item组件*/\r\n                            // props:{\r\n                            //     a:1,\r\n                            //     b:'hello'\r\n                            // }\r\n                            /*props第二种写法，值为布尔值，如果布尔值为真，则会把该路由组件收到的params参数，以props形式\r\n                            传给Item组件 */\r\n                            // props:true\r\n\r\n                            /* props的第三种写法，值为函数 */\r\n                            props($route){\r\n                                return {id:$route.query.id,title:$route.query.title}\r\n                            },\r\n                            meta:{\r\n                                auth:true,\r\n                                title:'详细信息'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            meta:{\r\n                auth:true,\r\n                title:'个人主目录'\r\n            }\r\n        },\r\n       \r\n\r\n    ]\r\n})\r\n//全局前置路由守卫\r\nvr.beforeEach((to,from,next) => {\r\n    console.log(to,from)\r\n    if(to.meta.auth){\r\n        if(localStorage.getItem('name')==='czz' ){\r\n            next()\r\n        }\r\n        else\r\n        {\r\n            alert('用户名不正确')\r\n        }\r\n    }\r\n    else{\r\n        next()\r\n    } \r\n})\r\n//全局后置路由守卫\r\nvr.afterEach((to,from)=>{\r\n    document.title=to.meta.title || 'Vue Router Demo'\r\n}\r\n)\r\n\r\n\r\nexport default vr"],"mappings":"AAAA;AACA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,GAAG,MAAM,KAAK;AACrBA,GAAG,CAACC,GAAG,CAACF,SAAS,CAAC;AAClB,OAAOG,KAAK,MAAM,gBAAgB;AAClC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,IAAI,MAAM,eAAe;AAEhC,MAAMC,EAAE,GAAE,IAAIR,SAAS,CAAC;EACpBS,MAAM,EAAC,CACH;IACIC,IAAI,EAAC,QAAQ;IACbC,SAAS,EAACR,KAAK;IACfS,IAAI,EAAC;MACDC,KAAK,EAAC;IACV,CAAC;IACD;IACAC,WAAWA,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,EAAC;MACrB,IAAGF,EAAE,CAACL,IAAI,KAAG,QAAQ,EAAC;QAClB,IAAGQ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAG,KAAK,EAAC;UACpCF,IAAI,EAAE;QACV,CAAC,MAAI;UACDG,KAAK,CAAC,QAAQ,CAAC;QACnB;MACJ;IACJ;EACJ,CAAC,EACD;IACIV,IAAI,EAAC,OAAO;IACZC,SAAS,EAACP,IAAI;IACdiB,QAAQ,EAAC,CACL;MACIX,IAAI,EAAC,MAAM;MACXC,SAAS,EAACN,IAAI;MACdO,IAAI,EAAC;QACDU,IAAI,EAAC,IAAI;QACTT,KAAK,EAAC;MACV;IACJ,CAAC,EACD;MACIH,IAAI,EAAC,SAAS;MACdC,SAAS,EAACL,OAAO;MACjBM,IAAI,EAAC;QACDU,IAAI,EAAC,IAAI;QACTT,KAAK,EAAC;MACV,CAAC;MACDQ,QAAQ,EAAC,CACL;QACIE,IAAI,EAAC,MAAM;QACX;QACAb,IAAI,EAAC,MAAM;QACXC,SAAS,EAACJ,IAAI;QACd;AAC5B;QAC4B;QACA;QACA;QACA;QACA;AAC5B;QAC4B;;QAEA;QACAiB,KAAKA,CAACC,MAAM,EAAC;UACT,OAAO;YAACC,EAAE,EAACD,MAAM,CAACE,KAAK,CAACD,EAAE;YAACb,KAAK,EAACY,MAAM,CAACE,KAAK,CAACd;UAAK,CAAC;QACxD,CAAC;QACDD,IAAI,EAAC;UACDU,IAAI,EAAC,IAAI;UACTT,KAAK,EAAC;QACV;MACJ,CAAC;IAET,CAAC,CACJ;IACDD,IAAI,EAAC;MACDU,IAAI,EAAC,IAAI;MACTT,KAAK,EAAC;IACV;EACJ,CAAC;AAIT,CAAC,CAAC;AACF;AACAL,EAAE,CAACoB,UAAU,CAAC,CAACb,EAAE,EAACC,IAAI,EAACC,IAAI,KAAK;EAC5BY,OAAO,CAACC,GAAG,CAACf,EAAE,EAACC,IAAI,CAAC;EACpB,IAAGD,EAAE,CAACH,IAAI,CAACU,IAAI,EAAC;IACZ,IAAGJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,KAAG,KAAK,EAAE;MACrCF,IAAI,EAAE;IACV,CAAC,MAED;MACIG,KAAK,CAAC,QAAQ,CAAC;IACnB;EACJ,CAAC,MACG;IACAH,IAAI,EAAE;EACV;AACJ,CAAC,CAAC;AACF;AACAT,EAAE,CAACuB,SAAS,CAAC,CAAChB,EAAE,EAACC,IAAI,KAAG;EACpBgB,QAAQ,CAACnB,KAAK,GAACE,EAAE,CAACH,IAAI,CAACC,KAAK,IAAI,iBAAiB;AACrD,CAAC,CACA;AAGD,eAAeL,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}